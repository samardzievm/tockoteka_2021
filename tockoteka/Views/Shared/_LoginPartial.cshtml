@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> signInManager;
@inject UserManager<IdentityUser> userManager;

    <ul class="navbar-nav">
        @if (signInManager.IsSignedIn(User))
        {
            <li class="nav-item">
                <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                    @{

                    }
                    <i class="fas fa-user"></i> @userManager.GetUserAsync(User).Result.UserName @*.GetUserAsync(User).Result.*@
                </a>
            </li>
            <li class="nav-item">
                <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    <button id="logout" type="submit" class="nav-link btn btn-link text-dark"><i class="fas fa-sign-out-alt"></i> Одјава</button>
                </form>
            </li>
        }
        else
        {
            <li class="nav-item">
                <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register"><i class="fas fa-user-plus"></i> Регистрација</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login"><i class="fas fa-sign-in-alt"></i> Најава</a>
            </li>
        }
    </ul>
